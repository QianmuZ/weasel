name: Release CI

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.*'
  workflow_dispatch:

jobs:
  build-and-release:
    permissions:
      contents: write
    runs-on: windows-2022
    env:
      librime_build: submodule
      boost_version: 1.83.0
      BOOST_ROOT: ${{ github.workspace }}\deps\boost_1_83_0
    steps:
      - name: Checkout last commit
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Configure build environment
        run: |
          copy env.vs2022.bat env.bat
          $git_ref_name = git describe --always
          echo "git_ref_name=$git_ref_name" >> $env:GITHUB_ENV

      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.BOOST_ROOT }}
          key: ${{ runner.os }}-boost-${{ env.boost_version }}

      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: .\install_boost.bat

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1.3

      - name: Copy Rime files
        if: env.librime_build == 'stable'
        run: |
          .\github.install.bat

      - name: Build librime 64 bit
        if: env.librime_build == 'submodule'
        env:
          ARCH: x64
          RIME_PLUGINS: hchunhui/librime-lua lotem/librime-octagram rime/librime-predict
        shell: bash
        run: |
          # load plugins
          pushd librime
          ./action-install-plugins-windows.bat
          popd
          # build librime
          ./build.bat librime
          # copy x64 files to weasel and rename
          echo " ./lib/rimex64.dll"
          cp ./librime/dist/lib/rime.dll ./lib/rimex64.dll
          echo " ./lib/rimex64.lib"
          cp ./librime/dist/lib/rime.lib ./lib/rimex64.lib
          echo " ./output/x64/rime.dll"
          cp ./librime/dist/lib/rime.dll ./output/x64/rime.dll

      - name: Build librime
        if: env.librime_build == 'submodule'
        env:
          ARCH: Win32
          RIME_PLUGINS: hchunhui/librime-lua lotem/librime-octagram rime/librime-predict
        shell: bash
        run: |
          # clean x64
          rm -rf ./librime/deps/opencc/build/
          rm -rf ./librime/deps/glog/build/
          rm -rf ./librime/deps/googletest/build/
          rm -rf ./librime/deps/leveldb/build/
          rm -rf ./librime/deps/marisa-trie/build/
          rm -rf ./librime/deps/yaml-cpp/build/
          rm -rf ./librime/build/
          rm -rf ./librime/lib/*.lib
          rm -rf ./librime/lib/cmake
          rm -rf ./librime/lib/pkgconfig
          rm -rf ./librime/dist
          # build librime
          ./build.bat librime

      - name: Build Weasel
        id: build_weasel
        shell: bash
        run: |
          ./build.bat data
          ./build.bat hant
          ./build.bat installer

      - name: Compress Debug Symbols
        shell: pwsh
        run: |
          Compress-Archive -Path output\*.pdb -CompressionLevel Optimal -DestinationPath .\output\archives\symbols.zip

      - name: Extract changelog
        shell: pwsh
        run: |
          .\extract_changelog.ps1
        if: startsWith(github.ref, 'refs/tags/')

      - name: Create Nightly release
        if: github.ref == 'refs/heads/master'
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          title: "Nightly Build"
          files: |
            ./output/archives/weasel*.exe
            ./output/archives/symbols.zip
        
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./output/archives/weasel*.exe
            ./output/archives/symbols.zip
          body_path: ${{ github.workspace }}/RELEASE_CHANGELOG.md
        
